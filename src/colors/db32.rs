// Dawnbreaker's 32 color pallet in both u8 and f32
#![allow(unused)]

pub const DB32_COL_32_U8: (u8, u8, u8) = (0, 0, 0); // BLACK
pub const DB32_COL_31_U8: (u8, u8, u8) = (34, 32, 52); // DARKEST_BLUE
pub const DB32_COL_30_U8: (u8, u8, u8) = (69, 40, 60); // PURPLE BROWN?
pub const DB32_COL_29_U8: (u8, u8, u8) = (102, 57, 49); // DARKER BROWN
pub const DB32_COL_28_U8: (u8, u8, u8) = (143, 86, 59); // BROWN
pub const DB32_COL_27_U8: (u8, u8, u8) = (223, 113, 38); // ORANGE
pub const DB32_COL_26_U8: (u8, u8, u8) = (217, 160, 102); // LIGHT BROWN
pub const DB32_COL_25_U8: (u8, u8, u8) = (238, 195, 154); // FLESH? PEACH?
pub const DB32_COL_24_U8: (u8, u8, u8) = (251, 242, 54); // YELLOW
pub const DB32_COL_23_U8: (u8, u8, u8) = (153, 229, 80); // LIGHT GREEN
pub const DB32_COL_22_U8: (u8, u8, u8) = (106, 190, 48); // GREEN
pub const DB32_COL_21_U8: (u8, u8, u8) = (55, 148, 110); // GREEN BLUE
pub const DB32_COL_20_U8: (u8, u8, u8) = (75, 105, 47); // DARK GREEN
pub const DB32_COL_19_U8: (u8, u8, u8) = (82, 75, 36); // DARK BROWN GREEN
pub const DB32_COL_18_U8: (u8, u8, u8) = (50, 60, 57); // DARKEST GREY
pub const DB32_COL_17_U8: (u8, u8, u8) = (63, 63, 116); // BLUE PURPLE
pub const DB32_COL_16_U8: (u8, u8, u8) = (48, 96, 130); // DARK CYAN
pub const DB32_COL_15_U8: (u8, u8, u8) = (91, 110, 225); // BLUE
pub const DB32_COL_14_U8: (u8, u8, u8) = (99, 155, 255); // LIGHT BLUE
pub const DB32_COL_13_U8: (u8, u8, u8) = (95, 205, 228); // CYAN
pub const DB32_COL_12_U8: (u8, u8, u8) = (203, 219, 252); // LIGHTEST GREY
pub const DB32_COL_11_U8: (u8, u8, u8) = (255, 255, 255); // WHITE
pub const DB32_COL_10_U8: (u8, u8, u8) = (155, 173, 183); // LIGHTER GREY
pub const DB32_COL_09_U8: (u8, u8, u8) = (132, 126, 135); // GREY
pub const DB32_COL_08_U8: (u8, u8, u8) = (105, 106, 106); // DARK GREY
pub const DB32_COL_07_U8: (u8, u8, u8) = (89, 86, 82); // DARKER GREY
pub const DB32_COL_06_U8: (u8, u8, u8) = (118, 66, 138); // VIOLET
pub const DB32_COL_05_U8: (u8, u8, u8) = (172, 50, 50); // RED
pub const DB32_COL_04_U8: (u8, u8, u8) = (217, 87, 99); // ROSE
pub const DB32_COL_03_U8: (u8, u8, u8) = (215, 123, 186); // PINK
pub const DB32_COL_02_U8: (u8, u8, u8) = (143, 151, 74); // LIGHT MUDDY GREEN
pub const DB32_COL_01_U8: (u8, u8, u8) = (138, 111, 48); // MUDDY BROWN

pub const DB32_COL_32: (f32, f32, f32) = (0.0, 0.0, 0.0); // BLACK
pub const DB32_COL_31: (f32, f32, f32) = (0.13, 0.13, 0.2); // DARKEST_BLUE
pub const DB32_COL_30: (f32, f32, f32) = (0.27, 0.16, 0.24); // PURPLE BROWN?
pub const DB32_COL_29: (f32, f32, f32) = (0.4, 0.22, 0.19); // DARKER BROWN
pub const DB32_COL_28: (f32, f32, f32) = (0.56, 0.34, 0.23); // BROWN
pub const DB32_COL_27: (f32, f32, f32) = (0.87, 0.44, 0.15); // ORANGE
pub const DB32_COL_26: (f32, f32, f32) = (0.85, 0.63, 0.4); // LIGHT BROWN
pub const DB32_COL_25: (f32, f32, f32) = (0.93, 0.76, 0.6); // FLESH? PEACH?
pub const DB32_COL_24: (f32, f32, f32) = (0.98, 0.95, 0.21); // YELLOW
pub const DB32_COL_23: (f32, f32, f32) = (0.6, 0.9, 0.31); // LIGHT GREEN
pub const DB32_COL_22: (f32, f32, f32) = (0.42, 0.75, 0.19); // GREEN
pub const DB32_COL_21: (f32, f32, f32) = (0.22, 0.58, 0.43); // GREEN BLUE
pub const DB32_COL_20: (f32, f32, f32) = (0.29, 0.41, 0.18); // DARK GREEN
pub const DB32_COL_19: (f32, f32, f32) = (0.32, 0.29, 0.14); // DARK BROWN GREEN
pub const DB32_COL_18: (f32, f32, f32) = (0.20, 0.24, 0.22); // DARKEST GREY
pub const DB32_COL_17: (f32, f32, f32) = (0.25, 0.25, 0.45); // BLUE PURPLE
pub const DB32_COL_16: (f32, f32, f32) = (0.19, 0.38, 0.51); // DARK CYAN
pub const DB32_COL_15: (f32, f32, f32) = (0.36, 0.43, 0.88); // BLUE
pub const DB32_COL_14: (f32, f32, f32) = (0.39, 0.61, 1.0); // LIGHT BLUE
pub const DB32_COL_13: (f32, f32, f32) = (0.37, 0.8, 0.89); // CYAN
pub const DB32_COL_12: (f32, f32, f32) = (0.8, 0.86, 0.99); // LIGHTEST GREY
pub const DB32_COL_11: (f32, f32, f32) = (1.0, 1.0, 1.0); // WHITE
pub const DB32_COL_10: (f32, f32, f32) = (0.61, 0.68, 0.72); // LIGHTER GREY
pub const DB32_COL_09: (f32, f32, f32) = (0.52, 0.49, 0.53); // GREY
pub const DB32_COL_08: (f32, f32, f32) = (0.41, 0.42, 0.42); // DARK GREY
pub const DB32_COL_07: (f32, f32, f32) = (0.35, 0.34, 0.32); // DARKER GREY
pub const DB32_COL_06: (f32, f32, f32) = (0.48, 0.26, 0.54); // VIOLET
pub const DB32_COL_05: (f32, f32, f32) = (0.67, 0.2, 0.2); // RED
pub const DB32_COL_04: (f32, f32, f32) = (0.85, 0.34, 0.39); // ROSE
pub const DB32_COL_03: (f32, f32, f32) = (0.84, 0.48, 0.73); // PINK
pub const DB32_COL_02: (f32, f32, f32) = (0.56, 0.59, 0.29); // LIGHT MUDDY GREEN
pub const DB32_COL_01: (f32, f32, f32) = (0.54, 0.44, 0.19); // MUDDY BROWN